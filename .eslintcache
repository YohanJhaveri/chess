[{"/Users/yohanjhaveri/Desktop/react-games/chess/src/index.js":"1","/Users/yohanjhaveri/Desktop/react-games/chess/src/App.js":"2","/Users/yohanjhaveri/Desktop/react-games/chess/src/components/Board.js":"3","/Users/yohanjhaveri/Desktop/react-games/chess/src/components/Clock.js":"4","/Users/yohanjhaveri/Desktop/react-games/chess/src/components/Settings.js":"5","/Users/yohanjhaveri/Desktop/react-games/chess/src/components/Buttons.js":"6","/Users/yohanjhaveri/Desktop/react-games/chess/src/functions.js":"7","/Users/yohanjhaveri/Desktop/react-games/chess/src/constants.js":"8"},{"size":166,"mtime":1609853360998,"results":"9","hashOfConfig":"10"},{"size":3611,"mtime":1613112963081,"results":"11","hashOfConfig":"10"},{"size":2276,"mtime":1613112980708,"results":"12","hashOfConfig":"10"},{"size":940,"mtime":1613108915031,"results":"13","hashOfConfig":"10"},{"size":1307,"mtime":1613109398964,"results":"14","hashOfConfig":"10"},{"size":549,"mtime":1610039382382,"results":"15","hashOfConfig":"10"},{"size":10080,"mtime":1613112904921,"results":"16","hashOfConfig":"10"},{"size":1455,"mtime":1613112892925,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"19zktnt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yohanjhaveri/Desktop/react-games/chess/src/index.js",[],["36","37"],"/Users/yohanjhaveri/Desktop/react-games/chess/src/App.js",["38"],"import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport Board from \"components/Board\";\nimport Clock from \"components/Clock\";\nimport Settings from \"components/Settings\";\n\nimport { makeDeepCopyBoard, getCoordinates, getPossibleMoves } from \"functions\";\n\nimport { INITIAL } from \"./constants\";\n\nfunction App() {\n  // GAME BASED\n  const [time, setTime] = useState(10);\n  const [active, setActive] = useState(false);\n  const [state, setState] = useState([INITIAL]);\n  const [index, setIndex] = useState(0);\n  const [turn, setTurn] = useState(\"\");\n  const [clock, setClock] = useState([600, 600]);\n  const [winner, setWinner] = useState(\"\");\n\n  // TURN BASED\n  const [selectedSquare, setSelectedSquare] = useState(\"\");\n  const [possibleMoves, setPossibleMoves] = useState([]);\n  const [countdownInterval, setCountdownInterval] = useState();\n\n  // SET CLOCK\n  useEffect(() => {\n    const seconds = time * 60;\n    setClock([seconds, seconds]);\n  }, [time]);\n\n  // TRIGGER COUNTDOWN\n  useEffect(() => {\n    clearInterval(countdownInterval);\n\n    if (turn) {\n      setCountdownInterval(() =>\n        setInterval(() => {\n          setClock((prev) => {\n            const updated = [...prev];\n            if (turn === \"W\") updated[0] -= 1;\n            if (turn === \"B\") updated[1] -= 1;\n            if (updated[0] === 0) handleEnd(\"B\");\n            if (updated[1] === 0) handleEnd(\"W\");\n            return updated;\n          });\n        }, 1000)\n      );\n    }\n  }, [turn]);\n\n  // WINNER ANNOUNCEMENT\n  useEffect(() => {\n    if (winner) {\n      alert(`${winner === \"W\" ? \"White\" : \"Black\"} wins!`);\n    }\n  }, [winner]);\n\n  const handleStart = () => {\n    setWinner(\"\");\n    setTurn(\"W\");\n    setActive(true);\n  };\n\n  const handleEnd = (winner) => {\n    setWinner(winner);\n    setTurn(\"\");\n    setActive(false);\n  };\n\n  const handleMove = (origin, destination) => {\n    const [x0, y0] = getCoordinates(origin);\n    const [x1, y1] = getCoordinates(destination);\n\n    setState((prev) => {\n      const board = makeDeepCopyBoard(prev[prev.length - 1]);\n      board[x1][y1] = board[x0][y0];\n      board[x0][y0] = \"\";\n      setIndex((prev) => prev + 1);\n      return prev.concat([board]);\n    });\n  };\n\n  const handleClick = (square) => {\n    if (index !== state.length - 1) return;\n\n    const [x, y] = getCoordinates(square);\n    const board = state[state.length - 1];\n    const [color] = board[x][y].split(\"\");\n\n    if (color === turn) {\n      if (square === selectedSquare) {\n        setSelectedSquare(\"\");\n        setPossibleMoves([]);\n        return;\n      }\n\n      setSelectedSquare(square);\n      setPossibleMoves(getPossibleMoves(board, square));\n      return;\n    }\n\n    if (possibleMoves.includes(square)) {\n      handleMove(selectedSquare, square);\n      setTurn((prevTurn) => (prevTurn === \"W\" ? \"B\" : \"W\"));\n    }\n\n    setSelectedSquare(\"\");\n    setPossibleMoves([]);\n  };\n\n  const handleBack = () => {\n    setIndex((prev) => prev - (prev > 0));\n  };\n\n  const handleNext = () => {\n    setIndex((prev) => prev + (prev < state.length - 1));\n  };\n\n  return (\n    <Page>\n      <Clock clock={clock} />\n      <Board\n        board={state[index]}\n        selectedSquare={selectedSquare}\n        possibleMoves={possibleMoves}\n        handleClick={handleClick}\n      />\n      <Settings\n        active={active}\n        time={time}\n        setTime={setTime}\n        handleBack={handleBack}\n        handleNext={handleNext}\n        handleStart={handleStart}\n      />\n    </Page>\n  );\n}\n\nconst Page = styled.div`\n  display: grid;\n  grid-gap: 15px;\n  width: 512px;\n`;\n\nexport default App;\n","/Users/yohanjhaveri/Desktop/react-games/chess/src/components/Board.js",[],"/Users/yohanjhaveri/Desktop/react-games/chess/src/components/Clock.js",[],"/Users/yohanjhaveri/Desktop/react-games/chess/src/components/Settings.js",[],"/Users/yohanjhaveri/Desktop/react-games/chess/src/components/Buttons.js",[],"/Users/yohanjhaveri/Desktop/react-games/chess/src/functions.js",[],"/Users/yohanjhaveri/Desktop/react-games/chess/src/constants.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":51,"column":6,"nodeType":"45","endLine":51,"endColumn":12,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'countdownInterval'. Either include it or remove the dependency array.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [countdownInterval, turn]",{"range":"52","text":"53"},[1497,1503],"[countdownInterval, turn]"]